{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/player.service\";\nimport * as i3 from \"@angular/common/http\";\n\nfunction PlayerFormComponent_div_0_mat_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r8, \" \");\n  }\n}\n\nfunction PlayerFormComponent_div_0_p_11_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1, \"* Please enter a player name\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PlayerFormComponent_div_0_p_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtemplate(1, PlayerFormComponent_div_0_p_11_span_1_Template, 2, 0, \"span\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r7.playerForm.get(\"playerName\")) == null ? null : tmp_0_0.errors)[\"required\"]);\n  }\n}\n\nfunction PlayerFormComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"h1\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 9);\n    i0.ɵɵlistener(\"ngSubmit\", function PlayerFormComponent_div_0_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.onSubmit();\n    });\n    i0.ɵɵelementStart(4, \"div\", 10);\n    i0.ɵɵelementStart(5, \"label\", 11);\n    i0.ɵɵtext(6, \"Player Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 12);\n    i0.ɵɵelementStart(8, \"mat-autocomplete\", null, 5);\n    i0.ɵɵtemplate(10, PlayerFormComponent_div_0_mat_option_10_Template, 2, 2, \"mat-option\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, PlayerFormComponent_div_0_p_11_Template, 2, 1, \"p\", 0);\n    i0.ɵɵelementStart(12, \"button\", 13);\n    i0.ɵɵtext(13, \"Search\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r5 = i0.ɵɵreference(9);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_2_0;\n    let tmp_5_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.playerForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"invalid\", !((tmp_2_0 = ctx_r0.playerForm.get(\"playerName\")) == null ? null : tmp_2_0.valid) && ((tmp_2_0 = ctx_r0.playerForm.get(\"playerName\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵproperty(\"matAutocomplete\", _r5);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.test);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !((tmp_5_0 = ctx_r0.playerForm.get(\"playerName\")) == null ? null : tmp_5_0.valid) && ((tmp_5_0 = ctx_r0.playerForm.get(\"playerName\")) == null ? null : tmp_5_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.playerForm.valid);\n  }\n}\n\nfunction PlayerFormComponent_mat_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r12, \" \");\n  }\n}\n\nfunction PlayerFormComponent_app_result_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-result\", 17);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"playerNumber\", ctx_r3.playerNumber);\n  }\n}\n\nfunction PlayerFormComponent_app_player_not_found_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-player-not-found\", 17);\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"playerNumber\", ctx_r4.playerNumber);\n  }\n}\n\nexport class PlayerFormComponent {\n  constructor(route, playerService, http) {\n    this.route = route;\n    this.playerService = playerService;\n    this.http = http;\n    this.nbaPlayers = [];\n    this.nbaPlayerInfo = [];\n    this.test = [\"hi\"];\n    this.title = '';\n    this.sport = '';\n    this.playerForm = new FormGroup({\n      'playerName': new FormControl('', Validators.required)\n    });\n    this.submitted = false;\n    this.playerValue = null;\n    this.playerExists = false;\n  }\n\n  ngOnInit() {\n    this.submitted = false;\n    this.sport = this.route.url.substring(1);\n    this.title = this.playerNumber === 0 ? \"Find the first player\" : \"Find the second player\";\n  }\n\n  onSubmit() {\n    this.nbaPlayers = this.playerService.getAllPlayersStats();\n    this.nbaPlayerInfo = this.playerService.getAllPlayers();\n    this.submitted = true;\n    this.playerValue = this.playerForm.value; // var result = this.nbaPlayers.filter((v, i) => {\n    //   return (v[\"name\"].startsWith(this.playerValue.playerName)\n    //          && v[\"year\"] == this.playerValue.season);\n    // });\n\n    var arrayIndex = this.nbaPlayerInfo.findIndex(v => v[\"name\"].startsWith(this.playerValue.playerName));\n    arrayIndex != -1 ? this.playerExists = true : this.playerExists = false; // result.length != 0 ? this.playerExists = true: this.playerExists = false;\n\n    if (this.playerExists) {\n      console.log(this.nbaPlayerInfo[arrayIndex]); // if (result[0].team.length > 4) {\n      //   var teamName: any = nbaTeamsAdvanced.filter((v, i) => {\n      //       return (v[\"teamName\"] == result[0].team)\n      //   })\n      //   result[0].team = teamName[0]['abbreviation'];\n      // }\n\n      this.playerService.setCurrentPlayer(this.nbaPlayerInfo[arrayIndex], this.playerNumber);\n      this.playerService.isFull();\n    }\n  }\n\n}\n\nPlayerFormComponent.ɵfac = function PlayerFormComponent_Factory(t) {\n  return new (t || PlayerFormComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PlayerService), i0.ɵɵdirectiveInject(i3.HttpClient));\n};\n\nPlayerFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PlayerFormComponent,\n  selectors: [[\"app-player-form\"]],\n  inputs: {\n    playerNumber: \"playerNumber\",\n    nbaPlayers: \"nbaPlayers\",\n    nbaPlayerInfo: \"nbaPlayerInfo\"\n  },\n  decls: 12,\n  vars: 8,\n  consts: [[4, \"ngIf\"], [1, \"example-form\"], [\"appearance\", \"fill\", 1, \"example-full-width\"], [\"type\", \"text\", \"placeholder\", \"Pick one\", \"aria-label\", \"Number\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"autoActiveFirstOption\", \"\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"playerNumber\", 4, \"ngIf\"], [1, \"find-title\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"playerName\"], [\"type\", \"text\", \"id\", \"playerName\", \"formControlName\", \"playerName\", 1, \"form-control\", 3, \"matAutocomplete\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-lg\", 3, \"disabled\"], [3, \"value\"], [\"class\", \"errorMsg\", 4, \"ngIf\"], [1, \"errorMsg\"], [3, \"playerNumber\"]],\n  template: function PlayerFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, PlayerFormComponent_div_0_Template, 14, 8, \"div\", 0);\n      i0.ɵɵelementStart(1, \"form\", 1);\n      i0.ɵɵelementStart(2, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(3, \"mat-label\");\n      i0.ɵɵtext(4, \"Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 3);\n      i0.ɵɵelementStart(6, \"mat-autocomplete\", 4, 5);\n      i0.ɵɵtemplate(8, PlayerFormComponent_mat_option_8_Template, 2, 2, \"mat-option\", 6);\n      i0.ɵɵpipe(9, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, PlayerFormComponent_app_result_10_Template, 1, 1, \"app-result\", 7);\n      i0.ɵɵtemplate(11, PlayerFormComponent_app_player_not_found_11_Template, 1, 1, \"app-player-not-found\", 7);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(7);\n\n      i0.ɵɵproperty(\"ngIf\", !ctx.submitted);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formControl\", ctx.playerFormControl)(\"matAutocomplete\", _r1);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(9, 6, ctx.test));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.playerExists);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && !ctx.playerExists);\n    }\n  },\n  styles: [\".form-group[_ngcontent-%COMP%] {\\n    padding-bottom: 5%;\\n}\\n.btn[_ngcontent-%COMP%] {\\n    margin-top: 15%;\\n    margin-bottom: 25%;\\n    margin-left: 45%;\\n}\\n.season-ctrl[_ngcontent-%COMP%] {\\n    width: 30%;\\n}\\n.errorMsg[_ngcontent-%COMP%] {\\n    color: red;\\n}\\n.invalid[_ngcontent-%COMP%] {\\n    border-color: red;\\n}\\n.find-title[_ngcontent-%COMP%] {\\n    text-align: center;\\n    padding-top: 10%;\\n    font-size: 2.5rem;\\n    padding-bottom: 10%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsYXllci1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxVQUFVO0FBQ2Q7QUFDQTtJQUNJLFVBQVU7QUFDZDtBQUNBO0lBQ0ksaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixtQkFBbUI7QUFDdkIiLCJmaWxlIjoicGxheWVyLWZvcm0uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWdyb3VwIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogNSU7XG59XG4uYnRuIHtcbiAgICBtYXJnaW4tdG9wOiAxNSU7XG4gICAgbWFyZ2luLWJvdHRvbTogMjUlO1xuICAgIG1hcmdpbi1sZWZ0OiA0NSU7XG59XG4uc2Vhc29uLWN0cmwge1xuICAgIHdpZHRoOiAzMCU7XG59XG4uZXJyb3JNc2cge1xuICAgIGNvbG9yOiByZWQ7XG59XG4uaW52YWxpZCB7XG4gICAgYm9yZGVyLWNvbG9yOiByZWQ7XG59XG4uZmluZC10aXRsZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmctdG9wOiAxMCU7XG4gICAgZm9udC1zaXplOiAyLjVyZW07XG4gICAgcGFkZGluZy1ib3R0b206IDEwJTtcbn0iXX0= */\"]\n});","map":{"version":3,"sources":["/Users/arnavkumar/Desktop/Personal Projects/SportsComparer/src/app/player-form/player-form.component.ts","/Users/arnavkumar/Desktop/Personal Projects/SportsComparer/src/app/player-form/player-form.component.html"],"names":[],"mappings":"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","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, DoCheck, Input, OnInit } from '@angular/core';\nimport { AbstractControl, Form, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { PlayerInfo, PlayerStats } from '../nbaPlayers';\nimport { nbaTeamsAdvanced } from '../nbaTeams';\nimport { PlayerService } from '../services/player.service';\n\n@Component({\n  selector: 'app-player-form',\n  templateUrl: './player-form.component.html',\n  styleUrls: ['./player-form.component.css']\n})\nexport class PlayerFormComponent implements OnInit {\n  @Input() playerNumber!: any;\n  @Input() nbaPlayers: PlayerStats[] = [];\n  @Input() nbaPlayerInfo: PlayerInfo[] = [];\n  playerFormControl!: FormControl;\n  test: String[] = [\"hi\"];\n  title: string = '';\n\n  sport: string = '';\n\n  playerForm: FormGroup = new FormGroup({\n    'playerName': new FormControl('', Validators.required),\n  });\n\n  submitted = false;\n\n  playerValue: any = null;\n\n  playerExists = false;\n\n  constructor(private route: Router, private playerService: PlayerService,\n    private http: HttpClient) {\n  }\n\n  ngOnInit(): void {\n    this.submitted = false;\n    this.sport = this.route.url.substring(1);\n    this.title = this.playerNumber === 0 ? \"Find the first player\" : \"Find the second player\";\n  }\n\n  onSubmit() {\n    this.nbaPlayers = this.playerService.getAllPlayersStats();\n    this.nbaPlayerInfo = this.playerService.getAllPlayers();\n    this.submitted = true;\n    this.playerValue = this.playerForm.value;\n    // var result = this.nbaPlayers.filter((v, i) => {\n    //   return (v[\"name\"].startsWith(this.playerValue.playerName)\n    //          && v[\"year\"] == this.playerValue.season);\n    // });\n    var arrayIndex = this.nbaPlayerInfo.findIndex(v => v[\"name\"].startsWith(this.playerValue.playerName));\n    arrayIndex != -1 ? this.playerExists = true: this.playerExists = false;\n    // result.length != 0 ? this.playerExists = true: this.playerExists = false;\n    if (this.playerExists) {\n      console.log(this.nbaPlayerInfo[arrayIndex]);\n      // if (result[0].team.length > 4) {\n      //   var teamName: any = nbaTeamsAdvanced.filter((v, i) => {\n      //       return (v[\"teamName\"] == result[0].team)\n      //   })\n      //   result[0].team = teamName[0]['abbreviation'];\n      // }\n      this.playerService.setCurrentPlayer(this.nbaPlayerInfo[arrayIndex], this.playerNumber);\n      this.playerService.isFull();\n    }\n    \n  }\n\n  // yearValidator(control: AbstractControl) {\n  //   if (control.value.trim().length === 0) {\n  //     return null;\n  //   }\n  //   const year = parseInt(control.value, 10);\n  //   const minYear = 1950;\n  //   const maxYear = 2021;\n    \n  //   if (year >= minYear && year <= maxYear)\n  //     return null;\n  //   else {\n  //     return { year: {\n  //       min: minYear,\n  //       max: maxYear\n  //     } };\n  //   }\n  // }\n}\n","<div *ngIf=\"!submitted\">\n    <h1 class= \"find-title\">{{title}}</h1>\n    <form [formGroup]=\"playerForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <label for=\"playerName\">Player Name</label>\n            <input type=\"text\"\n            id=\"playerName\"\n            class=\"form-control\"\n            formControlName=\"playerName\"\n            [class.invalid]=\"!playerForm.get('playerName')?.valid  && playerForm.get('playerName')?.touched\"\n            [matAutocomplete]=\"auto\">\n            <mat-autocomplete #auto=\"matAutocomplete\">\n                <mat-option *ngFor=\"let option of test\" [value]=\"option\">\n                  {{option}}\n                </mat-option>\n            </mat-autocomplete>\n        </div>\n        <p *ngIf=\"!playerForm.get('playerName')?.valid && playerForm.get('playerName')?.touched\">\n            <span *ngIf=\"playerForm.get('playerName')?.errors!['required']\" class=\"errorMsg\">* Please enter a player name</span>     \n         </p>\n        <!-- <div class=\"form-group\">\n            <label for=\"playerTeam\">Player Team</label>\n            <input type=\"text\" id=\"playerTeam\" class=\"form-control\"\n            formControlName=\"playerTeam\"\n            [class.invalid]=\"!playerForm.get('playerTeam')?.valid  && playerForm.get('playerTeam')?.touched\">\n        </div>\n        <p *ngIf=\"!playerForm.get('playerTeam')?.valid && playerForm.get('playerTeam')?.touched\" class=\"errorMsg\">\n           * Please enter a valid {{sport | uppercase}} team\n        </p> -->\n        <!-- <div class=\"form-group\">\n            <label for=\"season\">Season</label>\n            <input type=\"text\" id=\"season\" class=\"form-control season-ctrl\"\n            formControlName=\"season\"\n            [class.invalid]=\"!playerForm.get('season')?.valid  && playerForm.get('season')?.touched\"\n            maxlength=4>\n        </div>\n        <p *ngIf=\"!playerForm.get('season')?.valid && playerForm.get('season')?.touched\" class=\"errorMsg\">\n            * Please enter a valid season (between 1950-2017)\n         </p> -->\n        <button [disabled]=\"!playerForm.valid\" class=\"btn btn-primary btn-lg\" type=\"submit\">Search</button>\n    </form>\n</div>\n<form class=\"example-form\">\n    <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n      <mat-label>Number</mat-label>\n      <input type=\"text\"\n             placeholder=\"Pick one\"\n             aria-label=\"Number\"\n             matInput\n             [formControl]=\"playerFormControl\"\n             [matAutocomplete]=\"auto\">\n      <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let option of test | async\" [value]=\"option\">\n          {{option}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n  </form>\n<app-result *ngIf=\"submitted && playerExists\" [playerNumber]=\"playerNumber\"></app-result>\n<app-player-not-found *ngIf=\"submitted && !playerExists\" [playerNumber]=\"playerNumber\"></app-player-not-found>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}