{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { startWith, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/player.service\";\nimport * as i3 from \"@angular/common/http\";\n\nfunction PlayerFormComponent_div_0_mat_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r8.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", option_r8.name, \", \", option_r8.years[0], \" - \", option_r8.years[option_r8.years.length - 1], \" \");\n  }\n}\n\nfunction PlayerFormComponent_div_0_p_12_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \"* Please enter a player name\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PlayerFormComponent_div_0_p_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtemplate(1, PlayerFormComponent_div_0_p_12_span_1_Template, 2, 0, \"span\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r5.playerForm.get(\"playerName\")) == null ? null : tmp_0_0.errors)[\"required\"]);\n  }\n}\n\nfunction PlayerFormComponent_div_0_mat_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r10.name, \" \");\n  }\n}\n\nfunction PlayerFormComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"h1\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function PlayerFormComponent_div_0_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onSubmit();\n    });\n    i0.ɵɵelementStart(4, \"div\", 4);\n    i0.ɵɵelementStart(5, \"label\", 5);\n    i0.ɵɵtext(6, \"Player Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 6);\n    i0.ɵɵelementStart(8, \"mat-autocomplete\", 7, 8);\n    i0.ɵɵtemplate(10, PlayerFormComponent_div_0_mat_option_10_Template, 2, 4, \"mat-option\", 9);\n    i0.ɵɵpipe(11, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, PlayerFormComponent_div_0_p_12_Template, 2, 1, \"p\", 0);\n    i0.ɵɵelementStart(13, \"button\", 10);\n    i0.ɵɵtext(14, \"Search\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"p\");\n    i0.ɵɵtext(16, \"Test Form\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"form\", 11);\n    i0.ɵɵelementStart(18, \"mat-form-field\", 12);\n    i0.ɵɵelementStart(19, \"mat-label\");\n    i0.ɵɵtext(20, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(21, \"input\", 13);\n    i0.ɵɵelementStart(22, \"mat-autocomplete\", 14, 15);\n    i0.ɵɵtemplate(24, PlayerFormComponent_div_0_mat_option_24_Template, 2, 2, \"mat-option\", 16);\n    i0.ɵɵpipe(25, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(9);\n\n    const _r6 = i0.ɵɵreference(23);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_2_0;\n    let tmp_5_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.playerForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"invalid\", !((tmp_2_0 = ctx_r0.playerForm.get(\"playerName\")) == null ? null : tmp_2_0.valid) && ((tmp_2_0 = ctx_r0.playerForm.get(\"playerName\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵproperty(\"matAutocomplete\", _r3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(11, 11, ctx_r0.filteredOptions));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !((tmp_5_0 = ctx_r0.playerForm.get(\"playerName\")) == null ? null : tmp_5_0.valid) && ((tmp_5_0 = ctx_r0.playerForm.get(\"playerName\")) == null ? null : tmp_5_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.playerForm.valid);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.playerNameControl)(\"matAutocomplete\", _r6);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(25, 13, ctx_r0.filteredOptions));\n  }\n}\n\nfunction PlayerFormComponent_app_result_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-result\", 21);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"playerNumber\", ctx_r1.playerNumber);\n  }\n}\n\nfunction PlayerFormComponent_app_player_not_found_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-player-not-found\", 21);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"playerNumber\", ctx_r2.playerNumber);\n  }\n}\n\nexport class PlayerFormComponent {\n  constructor(route, playerService, http) {\n    this.route = route;\n    this.playerService = playerService;\n    this.http = http;\n    this.nbaPlayers = this.playerService.getAllPlayersStats();\n    this.nbaPlayerInfo = this.playerService.getAllPlayers();\n    this.title = '';\n    this.sport = '';\n    this.options = ['One', 'Two', 'Three'];\n    this.playerForm = new FormGroup({\n      'playerName': new FormControl('', Validators.required)\n    });\n    this.playerNameControl = new FormControl('', Validators.required);\n    this.submitted = false;\n    this.playerValue = null;\n    this.playerExists = false;\n  }\n\n  ngOnInit() {\n    this.submitted = false;\n    this.sport = this.route.url.substring(1);\n    this.title = this.playerNumber === 0 ? \"Find the first player\" : \"Find the second player\"; // this.filteredOptions = this.playerForm.valueChanges.pipe(\n    //   startWith(''),\n    //   debounceTime(1000),\n    //   map(value => this._filter(value)),\n    // );\n\n    this.filteredOptions = this.playerNameControl.valueChanges.pipe(startWith(''), map(value => this._filter(value)));\n  }\n\n  _filter(value) {\n    this.nbaPlayerInfo = this.playerService.getAllPlayers();\n    if (value == '') return [];\n    return this.nbaPlayerInfo.filter((v, i) => {\n      return v['name'].startsWith(value['playerName']);\n    }).splice(0, 5);\n  }\n\n  onSubmit() {\n    this.nbaPlayers = this.playerService.getAllPlayersStats();\n    this.nbaPlayerInfo = this.playerService.getAllPlayers();\n    this.submitted = true;\n    this.playerValue = this.playerForm.value;\n    var arrayIndex = this.nbaPlayerInfo.findIndex(v => v[\"name\"].startsWith(this.playerValue.playerName));\n    arrayIndex != -1 ? this.playerExists = true : this.playerExists = false;\n\n    if (this.playerExists) {\n      this.playerService.setCurrentPlayer(this.nbaPlayerInfo[arrayIndex], this.playerNumber);\n      this.playerService.isFull();\n    }\n  }\n\n}\n\nPlayerFormComponent.ɵfac = function PlayerFormComponent_Factory(t) {\n  return new (t || PlayerFormComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PlayerService), i0.ɵɵdirectiveInject(i3.HttpClient));\n};\n\nPlayerFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PlayerFormComponent,\n  selectors: [[\"app-player-form\"]],\n  inputs: {\n    playerNumber: \"playerNumber\"\n  },\n  decls: 3,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [3, \"playerNumber\", 4, \"ngIf\"], [1, \"find-title\"], [\"autocomplete\", \"off\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"playerName\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"playerName\", 1, \"form-control\", 3, \"matAutocomplete\"], [\"autoActiveFirstOption\", \"\", 1, \"autocomplete-box\"], [\"auto\", \"matAutocomplete\"], [\"class\", \"autocomplete-box\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-lg\", 3, \"disabled\"], [1, \"example-form\"], [\"appearance\", \"fill\", 1, \"example-full-width\"], [\"type\", \"text\", \"placeholder\", \"Pick one\", \"aria-label\", \"Number\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"autoActiveFirstOption\", \"\"], [\"auto2\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"autocomplete-box\", 3, \"value\"], [\"class\", \"errorMsg\", 4, \"ngIf\"], [1, \"errorMsg\"], [3, \"value\"], [3, \"playerNumber\"]],\n  template: function PlayerFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, PlayerFormComponent_div_0_Template, 26, 15, \"div\", 0);\n      i0.ɵɵtemplate(1, PlayerFormComponent_app_result_1_Template, 1, 1, \"app-result\", 1);\n      i0.ɵɵtemplate(2, PlayerFormComponent_app_player_not_found_2_Template, 1, 1, \"app-player-not-found\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.submitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.playerExists);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && !ctx.playerExists);\n    }\n  },\n  styles: [\".form-group[_ngcontent-%COMP%] {\\n    padding-bottom: 5%;\\n    position: relative;\\n    display: inline-block;\\n    width: 100%;\\n}\\n.btn[_ngcontent-%COMP%] {\\n    margin-top: 15%;\\n    margin-bottom: 25%;\\n    margin-left: 45%;\\n}\\n.season-ctrl[_ngcontent-%COMP%] {\\n    width: 30%;\\n}\\n.errorMsg[_ngcontent-%COMP%] {\\n    color: red;\\n}\\n.invalid[_ngcontent-%COMP%] {\\n    border-color: red;\\n}\\n.find-title[_ngcontent-%COMP%] {\\n    text-align: center;\\n    padding-top: 10%;\\n    font-size: 2.5rem;\\n    padding-bottom: 10%;\\n}\\n.example-form[_ngcontent-%COMP%] {\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n  }\\n.example-full-width[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n.autocomplete-box[_ngcontent-%COMP%] {\\n    z-index: 99;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsYXllci1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLHFCQUFxQjtJQUNyQixXQUFXO0FBQ2Y7QUFDQTtJQUNJLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxVQUFVO0FBQ2Q7QUFDQTtJQUNJLFVBQVU7QUFDZDtBQUNBO0lBQ0ksaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixtQkFBbUI7QUFDdkI7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsV0FBVztFQUNiO0FBRUE7SUFDRSxXQUFXO0VBQ2I7QUFFRjtJQUNJLFdBQVc7QUFDZiIsImZpbGUiOiJwbGF5ZXItZm9ybS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tZ3JvdXAge1xuICAgIHBhZGRpbmctYm90dG9tOiA1JTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xufVxuLmJ0biB7XG4gICAgbWFyZ2luLXRvcDogMTUlO1xuICAgIG1hcmdpbi1ib3R0b206IDI1JTtcbiAgICBtYXJnaW4tbGVmdDogNDUlO1xufVxuLnNlYXNvbi1jdHJsIHtcbiAgICB3aWR0aDogMzAlO1xufVxuLmVycm9yTXNnIHtcbiAgICBjb2xvcjogcmVkO1xufVxuLmludmFsaWQge1xuICAgIGJvcmRlci1jb2xvcjogcmVkO1xufVxuLmZpbmQtdGl0bGUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nLXRvcDogMTAlO1xuICAgIGZvbnQtc2l6ZTogMi41cmVtO1xuICAgIHBhZGRpbmctYm90dG9tOiAxMCU7XG59XG5cbi5leGFtcGxlLWZvcm0ge1xuICAgIG1pbi13aWR0aDogMTUwcHg7XG4gICAgbWF4LXdpZHRoOiA1MDBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICBcbiAgLmV4YW1wbGUtZnVsbC13aWR0aCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuLmF1dG9jb21wbGV0ZS1ib3gge1xuICAgIHotaW5kZXg6IDk5O1xufSJdfQ== */\"]\n});","map":{"version":3,"sources":["/Users/arnavkumar/Desktop/Personal Projects/SportsComparer/src/app/player-form/player-form.component.ts","/Users/arnavkumar/Desktop/Personal Projects/SportsComparer/src/app/player-form/player-form.component.html"],"names":[],"mappings":"AAEA,SAAgC,WAAhC,EAA6C,SAA7C,EAAwD,UAAxD,QAA0E,gBAA1E;AAKA,SAAS,SAAT,EAAoB,GAApB,QAAqD,gBAArD;;;;;;;;ACKgB,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,YAAA,EAAA,EAAA;AACE,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AACF,IAAA,EAAA,CAAA,YAAA;;;;;AAFoF,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,CAAA,IAAA;AAClF,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,SAAA,CAAA,IAAA,EAAA,IAAA,EAAA,SAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,SAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,MAAA,GAAA,CAAA,CAAA,EAAA,GAAA;;;;;;AAKN,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA;AAAiF,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,8BAAA;AAA4B,IAAA,EAAA,CAAA,YAAA;;;;;;AADjH,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA;AACI,IAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,8CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA;AACH,IAAA,EAAA,CAAA,YAAA;;;;;;AADU,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,CAAA,OAAA,GAAA,MAAA,CAAA,UAAA,CAAA,GAAA,CAAA,YAAA,CAAA,KAAA,IAAA,GAAA,IAAA,GAAA,OAAA,CAAA,MAAA,EAAA,UAAA,CAAA;;;;;;AAeP,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,YAAA,EAAA,EAAA;AACE,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AACF,IAAA,EAAA,CAAA,YAAA;;;;;AAF2D,IAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,UAAA;AACzD,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,UAAA,CAAA,IAAA,EAAA,GAAA;;;;;;;;AAlCd,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA;AACI,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA;AAAwB,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AAAS,IAAA,EAAA,CAAA,YAAA;AACjC,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,CAAA;AAAkD,IAAA,EAAA,CAAA,UAAA,CAAA,UAAA,EAAA,SAAA,2DAAA,GAAA;AAAA,MAAA,EAAA,CAAA,aAAA,CAAA,IAAA;AAAA,YAAA,OAAA,GAAA,EAAA,CAAA,aAAA,EAAA;AAAA,aAAA,OAAA,CAAA,QAAA,EAAA;AAAA,KAAA;AAC9C,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACI,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA;AAAwB,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,aAAA;AAAW,IAAA,EAAA,CAAA,YAAA;AACnC,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA;AAMA,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,kBAAA,EAAA,CAAA,EAAA,CAAA;AACI,IAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,gDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA;;AAGF,IAAA,EAAA,CAAA,YAAA;AACN,IAAA,EAAA,CAAA,YAAA;AACA,IAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,uCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA;AAGA,IAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA,EAAA,EAAA;AAAoF,IAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,QAAA;AAAM,IAAA,EAAA,CAAA,YAAA;AAC9F,IAAA,EAAA,CAAA,YAAA;AACA,IAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,GAAA;AAAG,IAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,WAAA;AAAS,IAAA,EAAA,CAAA,YAAA;AACZ,IAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,MAAA,EAAA,EAAA;AACI,IAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,gBAAA,EAAA,EAAA;AACE,IAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,WAAA;AAAW,IAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAA;AAAI,IAAA,EAAA,CAAA,YAAA;AACf,IAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA;AAMA,IAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,kBAAA,EAAA,EAAA,EAAA,EAAA;AACE,IAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,gDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,EAAA;;AAGF,IAAA,EAAA,CAAA,YAAA;AACF,IAAA,EAAA,CAAA,YAAA;AACF,IAAA,EAAA,CAAA,YAAA;AACN,IAAA,EAAA,CAAA,YAAA;;;;;;;;;;;AAtC4B,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,KAAA;AACC,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,WAAA,EAAA,MAAA,CAAA,UAAA;AAOjB,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,WAAA,CAAA,SAAA,EAAA,EAAA,CAAA,OAAA,GAAA,MAAA,CAAA,UAAA,CAAA,GAAA,CAAA,YAAA,CAAA,KAAA,IAAA,GAAA,IAAA,GAAA,OAAA,CAAA,KAAA,MAAA,CAAA,OAAA,GAAA,MAAA,CAAA,UAAA,CAAA,GAAA,CAAA,YAAA,CAAA,KAAA,IAAA,GAAA,IAAA,GAAA,OAAA,CAAA,OAAA,CAAA;AAFA,IAAA,EAAA,CAAA,UAAA,CAAA,iBAAA,EAAA,GAAA;AAK4D,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,EAAA,MAAA,CAAA,eAAA,CAAA;AAK5D,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,EAAA,CAAA,OAAA,GAAA,MAAA,CAAA,UAAA,CAAA,GAAA,CAAA,YAAA,CAAA,KAAA,IAAA,GAAA,IAAA,GAAA,OAAA,CAAA,KAAA,MAAA,CAAA,OAAA,GAAA,MAAA,CAAA,UAAA,CAAA,GAAA,CAAA,YAAA,CAAA,KAAA,IAAA,GAAA,IAAA,GAAA,OAAA,CAAA,OAAA,CAAA;AAGI,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,UAAA,EAAA,CAAA,MAAA,CAAA,UAAA,CAAA,KAAA;AAUC,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,aAAA,EAAA,MAAA,CAAA,iBAAA,EAAiC,iBAAjC,EAAiC,GAAjC;AAG0B,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,EAAA,MAAA,CAAA,eAAA,CAAA;;;;;;AAQ3C,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,YAAA,EAAA,EAAA;;;;;AAA8C,IAAA,EAAA,CAAA,UAAA,CAAA,cAAA,EAAA,MAAA,CAAA,YAAA;;;;;;AAC9C,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,sBAAA,EAAA,EAAA;;;;;AAAyD,IAAA,EAAA,CAAA,UAAA,CAAA,cAAA,EAAA,MAAA,CAAA,YAAA;;;;AD5BzD,OAAM,MAAO,mBAAP,CAA0B;AAsB9B,EAAA,WAAA,CAAoB,KAApB,EAA2C,aAA3C,EACU,IADV,EAC0B;AADN,SAAA,KAAA,GAAA,KAAA;AAAuB,SAAA,aAAA,GAAA,aAAA;AACjC,SAAA,IAAA,GAAA,IAAA;AArBV,SAAA,UAAA,GAAa,KAAK,aAAL,CAAmB,kBAAnB,EAAb;AACA,SAAA,aAAA,GAAe,KAAK,aAAL,CAAmB,aAAnB,EAAf;AACA,SAAA,KAAA,GAAgB,EAAhB;AACA,SAAA,KAAA,GAAgB,EAAhB;AACA,SAAA,OAAA,GAAoB,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,CAApB;AACA,SAAA,UAAA,GAAwB,IAAI,SAAJ,CAAc;AACpC,oBAAc,IAAI,WAAJ,CAAgB,EAAhB,EAAoB,UAAU,CAAC,QAA/B;AADsB,KAAd,CAAxB;AAGA,SAAA,iBAAA,GAAiC,IAAI,WAAJ,CAAgB,EAAhB,EAAoB,UAAU,CAAC,QAA/B,CAAjC;AAMA,SAAA,SAAA,GAAY,KAAZ;AAEA,SAAA,WAAA,GAAmB,IAAnB;AAEA,SAAA,YAAA,GAAe,KAAf;AAIC;;AAED,EAAA,QAAQ,GAAA;AACN,SAAK,SAAL,GAAiB,KAAjB;AACA,SAAK,KAAL,GAAa,KAAK,KAAL,CAAW,GAAX,CAAe,SAAf,CAAyB,CAAzB,CAAb;AACA,SAAK,KAAL,GAAa,KAAK,YAAL,KAAsB,CAAtB,GAA0B,uBAA1B,GAAoD,wBAAjE,CAHM,CAIN;AACA;AACA;AACA;AACA;;AACA,SAAK,eAAL,GAAuB,KAAK,iBAAL,CAAuB,YAAvB,CAAoC,IAApC,CACrB,SAAS,CAAC,EAAD,CADY,EAErB,GAAG,CAAC,KAAK,IAAI,KAAK,OAAL,CAAa,KAAb,CAAV,CAFkB,CAAvB;AAID;;AAEO,EAAA,OAAO,CAAC,KAAD,EAAW;AACxB,SAAK,aAAL,GAAoB,KAAK,aAAL,CAAmB,aAAnB,EAApB;AACA,QAAI,KAAK,IAAI,EAAb,EACE,OAAO,EAAP;AACF,WAAO,KAAK,aAAL,CAAmB,MAAnB,CAA0B,CAAC,CAAD,EAAI,CAAJ,KAAS;AACxC,aAAQ,CAAC,CAAC,MAAD,CAAD,CAAU,UAAV,CAAqB,KAAK,CAAC,YAAD,CAA1B,CAAR;AACD,KAFM,EAEJ,MAFI,CAEG,CAFH,EAEM,CAFN,CAAP;AAID;;AAED,EAAA,QAAQ,GAAA;AACN,SAAK,UAAL,GAAkB,KAAK,aAAL,CAAmB,kBAAnB,EAAlB;AACA,SAAK,aAAL,GAAqB,KAAK,aAAL,CAAmB,aAAnB,EAArB;AACA,SAAK,SAAL,GAAiB,IAAjB;AACA,SAAK,WAAL,GAAmB,KAAK,UAAL,CAAgB,KAAnC;AACA,QAAI,UAAU,GAAG,KAAK,aAAL,CAAmB,SAAnB,CAA6B,CAAC,IAAI,CAAC,CAAC,MAAD,CAAD,CAAU,UAAV,CAAqB,KAAK,WAAL,CAAiB,UAAtC,CAAlC,CAAjB;AACA,IAAA,UAAU,IAAI,CAAC,CAAf,GAAmB,KAAK,YAAL,GAAoB,IAAvC,GAA6C,KAAK,YAAL,GAAoB,KAAjE;;AACA,QAAI,KAAK,YAAT,EAAuB;AACrB,WAAK,aAAL,CAAmB,gBAAnB,CAAoC,KAAK,aAAL,CAAmB,UAAnB,CAApC,EAAoE,KAAK,YAAzE;AACA,WAAK,aAAL,CAAmB,MAAnB;AACD;AACF;;AA9D6B;;;mBAAnB,mB,EAAmB,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,MAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,aAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;QAAnB,mB;AAAmB,EAAA,SAAA,EAAA,CAAA,CAAA,iBAAA,CAAA,C;AAAA,EAAA,MAAA,EAAA;AAAA,IAAA,YAAA,EAAA;AAAA,G;AAAA,EAAA,KAAA,EAAA,C;AAAA,EAAA,IAAA,EAAA,C;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,cAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,YAAA,CAAA,EAAA,CAAA,cAAA,EAAA,KAAA,EAAA,CAAA,EAAA,WAAA,EAAA,UAAA,CAAA,EAAA,CAAA,CAAA,EAAA,YAAA,CAAA,EAAA,CAAA,KAAA,EAAA,YAAA,CAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,MAAA,EAAA,MAAA,EAAA,iBAAA,EAAA,YAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,uBAAA,EAAA,EAAA,EAAA,CAAA,EAAA,kBAAA,CAAA,EAAA,CAAA,MAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,OAAA,EAAA,kBAAA,EAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,MAAA,EAAA,QAAA,EAAA,CAAA,EAAA,KAAA,EAAA,aAAA,EAAA,QAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,CAAA,EAAA,cAAA,CAAA,EAAA,CAAA,YAAA,EAAA,MAAA,EAAA,CAAA,EAAA,oBAAA,CAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,aAAA,EAAA,UAAA,EAAA,YAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,EAAA,CAAA,EAAA,aAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,uBAAA,EAAA,EAAA,CAAA,EAAA,CAAA,OAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,kBAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,cAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,4BAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;ACdhC,MAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,kCAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,CAAA;AAyCA,MAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,yCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA;AACA,MAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,mDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,sBAAA,EAAA,CAAA;;;;AA1CM,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,GAAA,CAAA,SAAA;AAyCO,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,SAAA,IAAA,GAAA,CAAA,YAAA;AACU,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,SAAA,IAAA,CAAA,GAAA,CAAA,YAAA","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl, Form, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { PlayerInfo, PlayerStats } from '../nbaPlayers';\nimport { PlayerService } from '../services/player.service';\nimport { startWith, map, filter, debounceTime } from 'rxjs/operators'\n\n@Component({\n  selector: 'app-player-form',\n  templateUrl: './player-form.component.html',\n  styleUrls: ['./player-form.component.css']\n})\nexport class PlayerFormComponent implements OnInit {\n  @Input() playerNumber!: any;\n  nbaPlayers = this.playerService.getAllPlayersStats();\n  nbaPlayerInfo= this.playerService.getAllPlayers();\n  title: string = '';\n  sport: string = '';\n  options: string[] = ['One', 'Two', 'Three'];\n  playerForm: FormGroup = new FormGroup({\n    'playerName': new FormControl('', Validators.required),\n  });\n  playerNameControl: FormControl = new FormControl('', Validators.required);\n  filteredOptions!: Observable<PlayerInfo[]>;\n  \n\n  \n\n  submitted = false;\n\n  playerValue: any = null;\n\n  playerExists = false;\n\n  constructor(private route: Router, private playerService: PlayerService,\n    private http: HttpClient) {\n  }\n\n  ngOnInit(): void {\n    this.submitted = false;\n    this.sport = this.route.url.substring(1);\n    this.title = this.playerNumber === 0 ? \"Find the first player\" : \"Find the second player\";\n    // this.filteredOptions = this.playerForm.valueChanges.pipe(\n    //   startWith(''),\n    //   debounceTime(1000),\n    //   map(value => this._filter(value)),\n    // );\n    this.filteredOptions = this.playerNameControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    )\n  }\n\n  private _filter(value: any): PlayerInfo[] {\n    this.nbaPlayerInfo= this.playerService.getAllPlayers();\n    if (value == '')\n      return [];\n    return this.nbaPlayerInfo.filter((v, i) => {\n      return (v['name'].startsWith(value['playerName']));\n    }).splice(0, 5);\n\n  }\n\n  onSubmit() {\n    this.nbaPlayers = this.playerService.getAllPlayersStats();\n    this.nbaPlayerInfo = this.playerService.getAllPlayers();\n    this.submitted = true;\n    this.playerValue = this.playerForm.value;\n    var arrayIndex = this.nbaPlayerInfo.findIndex(v => v[\"name\"].startsWith(this.playerValue.playerName));\n    arrayIndex != -1 ? this.playerExists = true: this.playerExists = false;\n    if (this.playerExists) {\n      this.playerService.setCurrentPlayer(this.nbaPlayerInfo[arrayIndex], this.playerNumber);\n      this.playerService.isFull();\n    }\n  }\n}\n","<div *ngIf=\"!submitted\">\n    <h1 class= \"find-title\">{{title}}</h1>\n    <form autocomplete=\"off\" [formGroup]=\"playerForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n            <label for=\"playerName\">Player Name</label>\n            <input matInput type=\"text\"\n            class=\"form-control\"\n            [matAutocomplete]=\"auto\"\n            formControlName=\"playerName\"\n            [class.invalid]=\"!playerForm.get('playerName')?.valid  && playerForm.get('playerName')?.touched\"   \n            >\n            <mat-autocomplete class=\"autocomplete-box\" autoActiveFirstOption #auto=\"matAutocomplete\">\n                <mat-option class=\"autocomplete-box\" *ngFor=\"let option of filteredOptions | async\" [value]=\"option.name\">\n                  {{option.name}}, {{option.years[0]}} - {{option.years[option.years.length - 1]}}\n                </mat-option>\n              </mat-autocomplete>\n        </div>\n        <p *ngIf=\"!playerForm.get('playerName')?.valid && playerForm.get('playerName')?.touched\">\n            <span *ngIf=\"playerForm.get('playerName')?.errors!['required']\" class=\"errorMsg\">* Please enter a player name</span>     \n         </p>\n        <button [disabled]=\"!playerForm.valid\" class=\"btn btn-primary btn-lg\" type=\"submit\">Search</button>\n    </form>\n    <p>Test Form</p>\n    <form class=\"example-form\">\n        <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n          <mat-label>Name</mat-label>\n          <input type=\"text\"\n                 placeholder=\"Pick one\"\n                 aria-label=\"Number\"\n                 matInput\n                 [formControl]=\"playerNameControl\"\n                 [matAutocomplete]=\"auto2\">\n          <mat-autocomplete autoActiveFirstOption #auto2=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n              {{option.name}}\n            </mat-option>\n          </mat-autocomplete>\n        </mat-form-field>\n      </form>\n</div>\n\n<app-result *ngIf=\"submitted && playerExists\" [playerNumber]=\"playerNumber\"></app-result>\n<app-player-not-found *ngIf=\"submitted && !playerExists\" [playerNumber]=\"playerNumber\"></app-player-not-found>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}