{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { startWith, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/player.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/autocomplete\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"../result/result.component\";\nimport * as i11 from \"../player-not-found/player-not-found.component\";\n\nfunction PlayerFormComponent_div_0_mat_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r6.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", option_r6.name, \", \", option_r6.years[0], \" - \", option_r6.years[option_r6.years.length - 1], \" \");\n  }\n}\n\nfunction PlayerFormComponent_div_0_p_13_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \"* Please enter a player name\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction PlayerFormComponent_div_0_p_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtemplate(1, PlayerFormComponent_div_0_p_13_span_1_Template, 2, 0, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = ctx_r5.playerForm.get(\"playerName\")) == null ? null : tmp_0_0.errors)[\"required\"]);\n  }\n}\n\nfunction PlayerFormComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"h1\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function PlayerFormComponent_div_0_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onSubmit();\n    });\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵelementStart(5, \"mat-form-field\", 4);\n    i0.ɵɵelementStart(6, \"label\", 5);\n    i0.ɵɵtext(7, \"Player Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 6);\n    i0.ɵɵelementStart(9, \"mat-autocomplete\", 7, 8);\n    i0.ɵɵtemplate(11, PlayerFormComponent_div_0_mat_option_11_Template, 2, 4, \"mat-option\", 9);\n    i0.ɵɵpipe(12, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, PlayerFormComponent_div_0_p_13_Template, 2, 1, \"p\", 0);\n    i0.ɵɵelementStart(14, \"button\", 10);\n    i0.ɵɵtext(15, \"Search\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(10);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_2_0;\n    let tmp_5_0;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.playerForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵclassProp(\"invalid\", !((tmp_2_0 = ctx_r0.playerForm.get(\"playerName\")) == null ? null : tmp_2_0.valid) && ((tmp_2_0 = ctx_r0.playerForm.get(\"playerName\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵproperty(\"matAutocomplete\", _r3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(12, 8, ctx_r0.filteredOptions));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !((tmp_5_0 = ctx_r0.playerForm.get(\"playerName\")) == null ? null : tmp_5_0.valid) && ((tmp_5_0 = ctx_r0.playerForm.get(\"playerName\")) == null ? null : tmp_5_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.playerForm.valid);\n  }\n}\n\nfunction PlayerFormComponent_app_result_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-result\", 14);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"playerNumber\", ctx_r1.playerNumber);\n  }\n}\n\nfunction PlayerFormComponent_app_player_not_found_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-player-not-found\", 14);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"playerNumber\", ctx_r2.playerNumber);\n  }\n}\n\nexport let PlayerFormComponent = /*@__PURE__*/(() => {\n  class PlayerFormComponent {\n    constructor(route, playerService, http) {\n      this.route = route;\n      this.playerService = playerService;\n      this.http = http;\n      this.nbaPlayers = this.playerService.getAllPlayersStats();\n      this.nbaPlayerInfo = this.playerService.getAllPlayers();\n      this.title = '';\n      this.sport = '';\n      this.options = ['One', 'Two', 'Three'];\n      this.playerForm = new FormGroup({\n        'playerName': new FormControl('', Validators.required)\n      });\n      this.submitted = false;\n      this.playerValue = null;\n      this.playerExists = false;\n    }\n\n    ngOnInit() {\n      this.submitted = false;\n      this.sport = this.route.url.substring(1);\n      this.title = this.playerNumber === 0 ? \"Find the first player\" : \"Find the second player\";\n      this.filteredOptions = this.playerForm.valueChanges.pipe(startWith(''), map(value => this._filter(value)));\n    }\n\n    _filter(value) {\n      this.nbaPlayerInfo = this.playerService.getAllPlayers();\n\n      if (value['playerName'] == '' || value.length == 0) {\n        return [];\n      } else {\n        return this.nbaPlayerInfo.filter((v, i) => {\n          return v['lowercase'].startsWith(value['playerName'].toLowerCase());\n        }).splice(0, 5);\n      }\n    }\n\n    onSubmit() {\n      this.nbaPlayers = this.playerService.getAllPlayersStats();\n      this.nbaPlayerInfo = this.playerService.getAllPlayers();\n      this.submitted = true;\n      this.playerValue = this.playerForm.value;\n      var arrayIndex = this.nbaPlayerInfo.findIndex(v => v[\"name\"].startsWith(this.playerValue.playerName));\n      arrayIndex != -1 ? this.playerExists = true : this.playerExists = false;\n\n      if (this.playerExists) {\n        this.playerService.setCurrentPlayer(this.nbaPlayerInfo[arrayIndex], this.playerNumber);\n        this.playerService.isFull();\n      }\n    }\n\n  }\n\n  PlayerFormComponent.ɵfac = function PlayerFormComponent_Factory(t) {\n    return new (t || PlayerFormComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PlayerService), i0.ɵɵdirectiveInject(i3.HttpClient));\n  };\n\n  PlayerFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PlayerFormComponent,\n    selectors: [[\"app-player-form\"]],\n    inputs: {\n      playerNumber: \"playerNumber\"\n    },\n    decls: 3,\n    vars: 3,\n    consts: [[4, \"ngIf\"], [3, \"playerNumber\", 4, \"ngIf\"], [1, \"find-title\"], [\"autocomplete\", \"off\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"playerName\"], [\"id\", \"playerName\", \"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"playerName\", 1, \"form-control\", 3, \"matAutocomplete\"], [1, \"autocomplete-total\"], [\"auto\", \"matAutocomplete\"], [\"class\", \"autocomplete-items\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-lg\", 3, \"disabled\"], [1, \"autocomplete-items\", 3, \"value\"], [\"class\", \"errorMsg\", 4, \"ngIf\"], [1, \"errorMsg\"], [3, \"playerNumber\"]],\n    template: function PlayerFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, PlayerFormComponent_div_0_Template, 16, 10, \"div\", 0);\n        i0.ɵɵtemplate(1, PlayerFormComponent_app_result_1_Template, 1, 1, \"app-result\", 1);\n        i0.ɵɵtemplate(2, PlayerFormComponent_app_player_not_found_2_Template, 1, 1, \"app-player-not-found\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.submitted);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.playerExists);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && !ctx.playerExists);\n      }\n    },\n    directives: [i4.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i6.MatFormField, i7.MatInput, i5.DefaultValueAccessor, i8.MatAutocompleteTrigger, i5.NgControlStatus, i5.FormControlName, i8.MatAutocomplete, i4.NgForOf, i9.MatOption, i10.ResultComponent, i11.PlayerNotFoundComponent],\n    pipes: [i4.AsyncPipe],\n    styles: [\".form-group[_ngcontent-%COMP%]{padding-bottom:5%;position:relative;display:inline-block;width:100%}input[_ngcontent-%COMP%]{border:1px solid transparent;padding:10px;font-size:16px}input[_ngcontent-%COMP%], input[type=text][_ngcontent-%COMP%]{background-color:#f1f1f1}input[type=text][_ngcontent-%COMP%]{width:100%}input[type=submit][_ngcontent-%COMP%]{background-color:#1e90ff;color:#fff}.autocomplete-total[_ngcontent-%COMP%]{margin-bottom:50px}.autocomplete-items[_ngcontent-%COMP%]{border:1px solid #d4d4d4;border-top:none;background-color:#fff}.autocomplete-items[_ngcontent-%COMP%]:hover{color:#fff;background-color:#1e90ff}.btn[_ngcontent-%COMP%]{margin-top:15%;margin-bottom:25%;margin-left:45%;position:relative}.season-ctrl[_ngcontent-%COMP%]{width:30%}.errorMsg[_ngcontent-%COMP%]{color:red}.invalid[_ngcontent-%COMP%]{border-color:red}.find-title[_ngcontent-%COMP%]{text-align:center;padding-top:10%;font-size:2.5rem;padding-bottom:10%}.mat-autocomplete-panel[_ngcontent-%COMP%]{position:absolute;bottom:100px}\"]\n  });\n  return PlayerFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}